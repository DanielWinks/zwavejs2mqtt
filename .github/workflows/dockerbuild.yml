name: Docker Build

on:
  push:
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'docs/**'
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/setup-qemu-action@v1
      - name: Login to dockerhub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: zwavejs/zwavejs2mqtt
          tag-sha: true
          tag-latest: true
          tag-semver: |
            {{version}}
          tag-custom: ${{ github.ref == 'refs/heads/master' && 'dev' || '' }}
          label-custom: |
            org.opencontainers.image.vendor=zwave-js
            org.opencontainers.image.documentation=https://zwave-js.github.io/zwavejs2mqtt/#/
            org.opencontainers.image.authors=Daniel Lando <daniel.sorridi@gmail.com>
            org.opencontainers.image.url=https://zwave-js.github.io/zwavejs2mqtt/#/
            maintainer=robertsLando
      - id: cache_docker_layers
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ github.ref }}-${{ github.sha }}
            buildx-${{ github.ref }}
            buildx-
      - id: detect_dep_changes
        name: Detect Dependency Changes
        run: git diff --name-only ${GITHUB_SHA} | grep -q -E '^package(-lock)?\.json$' && echo "z2m_deps_changed=true" >> $GITHUB_ENV || true
      - id: docker_builder_base_image
        name: Build docker builder base image
        uses: docker/build-push-action@v2
        if: ${{ env.z2m_deps_changed }}
        with:
          # platforms: linux/arm64,linux/amd64,linux/arm/v6,linux/arm/v7
          platforms: linux/amd64
          file: docker/Dockerfile.builder-base
          cache-from: type=local,mode=max,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          build-args: | # TODO: Adjust tags to allow different for PRs + branches
            NODE_IMAGE_TAG=12.20.1-alpine
      - id: docker_runtime_base_image
        name: Build docker runtime base image
        uses: docker/build-push-action@v2
        if: ${{ env.z2m_deps_changed }}
        with:
          # platforms: linux/arm64,linux/amd64,linux/arm/v6,linux/arm/v7
          platforms: linux/amd64
          file: docker/Dockerfile.runtime-base
          cache-from: type=local,mode=max,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          build-args: | # TODO: Adjust tags to allow different for PRs + branches
            NODE_IMAGE_TAG=12.20.1-alpine
      - id: docker_builder_image
        name: Build docker builder image
        uses: docker/build-push-action@v2
        with:
          # platforms: linux/arm64,linux/amd64,linux/arm/v6,linux/arm/v7
          platforms: linux/amd64
          file: docker/Dockerfile.builder
          cache-from: type=local,mode=max,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          build-args: | # TODO: Adjust tags to allow different for PRs + branches
            BUILDER_BASE_IMAGE_TAG=latest
            NODE_IMAGE_TAG=12.20.1-alpine
      - id: docker_runtime_image
        name: Build docker runtime image
        uses: docker/build-push-action@v2
        with:
          # platforms: linux/arm64,linux/amd64,linux/arm/v6,linux/arm/v7
          platforms: linux/amd64
          file: docker/Dockerfile.runtime
          cache-from: type=local,mode=max,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          build-args: | # TODO: Adjust tags to allow different for PRs + branches
            BUILDER_IMAGE_TAG=latest
            RUNTIME_BASE_IMAGE_TAG=latest
          push: false # TODO: Remove again - just temporary for testing
          # push: ${{ github.event_name != 'pull_request' }}
          # tags: ${{ steps.docker_meta.outputs.tags }}
          # labels: ${{ steps.docker_meta.outputs.labels }}
